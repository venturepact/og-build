{"version":3,"sources":["webpack:///./src/app/shared/services/webhook.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/catch';\nimport { HttpBaseService } from './base.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class WebhookService extends HttpBaseService {\n\n  constructor(public _http: HttpClient) {\n    super();\n  }\n\n  testWebhook(data: any): Observable<any> {\n    if (data.events.length === 0 || data.events.length > 1) {\n      data['event'] = 'LEADS';\n    } else if (data.events.length === 1) {\n      data['event'] = data.events[0];\n    }\n    return this._http.post(this._url + '/calc/webhook/test', data, this.post_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  saveWebhook(data): Observable<any> {\n    return this._http.post(this._url + '/calc/webhook/save', data, this.post_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  getAllWebhook(company): Observable<any> {\n    return this._http.get(this._url + '/comp/webhook/' + company, this.get_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  getCalcWebhook(calcId): Observable<any> {\n    return this._http.get(this._url + '/calc/webhook/' + calcId, this.get_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  activateWebhook(calcId, status): Observable<any> {\n    return this._http.put(this._url + '/calc/webhook/' + calcId, { status: status }, this.put_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n  activateGlobalWebhook(gwebhook): Observable<any> {\n    return this._http.put(this._url + '/global/webhook/status', gwebhook, this.put_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  getCalcWebhookLeadlog(calcId, webhookLogsOffset, startDate, endDate): Observable<any> {\n    const data = {\n      webhookLogsOffset: webhookLogsOffset,\n      startDate: startDate,\n      endDate: endDate\n    };\n    return this._http.put(this._url + '/webhook/leadlog/' + calcId, data, this.put_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  getGlobalWebhookLeadlog(whId, webhookLogsOffset, startDate, endDate): Observable<any> {\n    const data = {\n      webhookLogsOffset: webhookLogsOffset,\n      startDate: startDate,\n      endDate: endDate\n    };\n    return this._http.post(this._url + '/gwebhook/leadlog/' + whId, data, this.post_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  saveGlobalWebhook(data) {\n    return this._http.post(this._url + '/global/webhook/save', data, this.post_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n  getCompanyWebhook(subdomain) {\n    return this._http.get(this._url + '/global/webhook/' + subdomain, this.get_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n  deleteGlobalWebhook(whid) {\n    return this._http.put(this._url + '/global/webhook/remove/' + whid, {}, this.put_options())\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n}\n"],"sourceRoot":""}