"use strict";
var CurrentPlan = (function () {
    function CurrentPlan(currentPlan) {
        if (currentPlan) {
            this.subscription = new Subscriptions(currentPlan.subscription);
            this.customer = new Customer(currentPlan.customer);
            if (currentPlan.customer.card_status !== 'no_card')
                this.card = new Card(currentPlan.card);
        }
    }
    return CurrentPlan;
}());
exports.CurrentPlan = CurrentPlan;
var Subscriptions = (function () {
    function Subscriptions(subscription) {
        if (subscription) {
            this.id = subscription.id;
            this.customer_id = subscription.customer_id;
            this.plan_id = subscription.plan_id;
            this.plan_quantity = subscription.plan_quantity;
            this.status = subscription.status;
            this.start_date = moment.unix(subscription.start_date).format('MMM Do YYYY');
            this.trial_start = moment.unix(subscription.trial_start).format('MMM Do YYYY');
            this.trial_end = moment.unix(subscription.trial_end).format('MMM Do YYYY');
            if (this.status != 'in_trial') {
                this.current_term_start = moment.unix(subscription.current_term_start).format('MMM Do YYYY');
                this.current_term_end = moment.unix(subscription.current_term_end).format('MMM Do YYYY');
            }
            this.created_at = moment.unix(subscription.created_at).format('MMM Do YYYY');
            this.started_at = moment.unix(subscription.started_at).format('MMM Do YYYY');
            this.has_scheduled_changes = subscription.has_scheduled_changes;
            this.object = subscription.object;
            this.currency_code = subscription.currency_code;
            this.due_invoices_count = subscription.due_invoice_count;
        }
    }
    return Subscriptions;
}());
exports.Subscriptions = Subscriptions;
var Customer = (function () {
    function Customer(customer) {
        if (customer) {
            this.id = customer.id;
            this.first_name = customer.first_name;
            this.email = customer.email;
            this.company = customer.company;
            this.auto_collection = customer.auto_collection;
            this.allow_direct_debit = customer.allow_direct_debit;
            this.created_at = moment.unix(customer.created_at).format('MMM Do YYYY');
            this.taxability = customer.taxability;
            this.object = customer.object;
            this.card_status = customer.card_status;
            this.billing_address = new BillingAddress(customer.billing_address);
            this.payment_method = new PaymentMethod(customer.payment_method);
            this.promotional_credits = customer.promotional_credits;
            this.refundable_credits = customer.refundable_credits;
            this.excess_payments = customer.excess_payments;
            this.cf_features = customer.cf_features;
        }
    }
    return Customer;
}());
exports.Customer = Customer;
var PaymentMethod = (function () {
    function PaymentMethod(paymentMethod) {
        if (paymentMethod) {
            this.object = paymentMethod.object;
            this.type = paymentMethod.type;
            this.reference_id = paymentMethod.reference_id;
            this.gateway = paymentMethod.gateway;
            this.status = paymentMethod.status;
        }
    }
    return PaymentMethod;
}());
exports.PaymentMethod = PaymentMethod;
var Card = (function () {
    function Card(card) {
        if (card) {
            this.customer_id = card.customer_id;
            this.status = card.status;
            this.gateway = card.gateway;
            this.iin = card.iin;
            this.last4 = card.last4;
            this.card_type = card.card_type;
            this.expiry_month = card.expiry_month;
            this.expiry_year = card.expiry_year;
            this.object = card.object;
            this.masked_number = card.masked_number;
        }
    }
    return Card;
}());
exports.Card = Card;
var BillingAddress = (function () {
    function BillingAddress(billingAddress) {
        if (billingAddress) {
            this.line1 = billingAddress.line1;
            this.city = billingAddress.city;
            this.state = billingAddress.state;
            this.country = billingAddress.country;
            this.zip = billingAddress.zip;
            this.validation_status = billingAddress.validation_status;
            this.object = billingAddress.object;
        }
    }
    return BillingAddress;
}());
exports.BillingAddress = BillingAddress;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
